{
    "$schema":"http://json-schema.org/draft-07/schema",
    "$id":"https://docs.electra.one/developers/confformat.html",
    "definitions":{
       "event":{
          "type":"string",
          "title":"event",
          "description":"An event (command) to execute on the Electra One controller.",
          "enum":[
             "openSnapshotsMenu",
             "openPresetsMenu",
             "openSettingsMenu",
             "openPagesMenu",
             "openMenu",
             "openDetail",
             "switchHandleNext",
             "switchHandlePrev",
             "closeDetail",
             "closePopupWindow",
             "requestPatch",
             "switchPreset",
             "switchPresetNext",
             "switchPresetPrev",
             "switchPage",
             "browsePage",
             "switchPageNext",
             "switchPagePrev",
             "switchControlSet",
             "switchControlSet1",
             "switchControlSet2",
             "switchControlSet3",
             "switchControlSetNext",
             "switchControlSetPrev",
             "switchSnapshotBank",
             "togglePotSensitivity",
             "setDefaultValue",
             "toggleAlt"
          ]
       },
       "buttonAction":{
          "type":"string",
          "title":"buttonAction",
          "description":"An action within the controller UI that can be triggered with a button press.",
          "enum":[
             "openSnapshotsMenu",
             "openPresetsMenu",
             "openSettingsMenu",
             "openPagesMenu",
             "openMenu",
             "closePopupWindow",
             "openDetail",
             "switchHandleNext",
             "switchHandlePrev",
             "requestPatch",
             "switchPresetNext",
             "switchPresetPrev",
             "switchPageNext",
             "switchPagePrev",
             "switchControlSet1",
             "switchControlSet2",
             "switchControlSet3",
             "switchControlSetNext",
             "switchControlSetPrev",
             "togglePotSensitivity",
             "toggleAlt"
          ]
       },
       "midiMessage":{
          "type":"string",
          "title":"midiMessage",
          "description":"A MIDI message type to trigger the event.",
          "enum":[
             "cc7",
             "program",
             "note",
             "noteOn",
             "noteOff"
          ]
       },
       "activeControlSetType":{
          "type":"string",
          "title":"activeControlSetType",
          "description":"A type of visual representation of the active control set.",
          "enum":[
             "none",
             "dim",
             "bars",
             "background"
          ]
       },
       "controlAction":{
          "type":"string",
          "title":"controlAction",
          "description":"UI action to be triggered on a control",
          "enum":[
             "none",
             "resetToDefault",
             "openDetail"
          ]
       },
       "activeControlSetMode":{
          "type":"string",
          "title":"activeControlSetMode",
          "description":"Mode of maintaining the active control set info.",
          "enum":[
             "global",
             "local",
             "custom"
          ]
       },
       "parameterNumber":{
          "type":"integer",
          "title":"parameterNumber",
          "description":"A parameter of the MIDI message.",
          "minimum":0,
          "maximum":127
       },
       "remoteDestination":{
          "type":"integer",
          "title":"remoteDestination",
          "description":"A destination of the remote event.",
          "minimum":1,
          "maximum":127
       },
       "remoteType":{
          "type":"string",
          "title":"remoteType",
          "description":"A type of a remote event.",
          "enum":[
             "change",
             "value"
          ]
       },
       "interface":{
          "type":"string",
          "title":"interface",
          "description":"A MIDI interface.",
          "enum":[
             "midiIo",
             "midiUsbDev",
             "midiUsbHost"
          ]
       },
       "port":{
          "type":[
             "number",
             "string"
          ],
          "title":"port",
          "description":"A MIDI port. Supports both old numeric and new string port names.",
          "enum":[
             1,
             2,
             3,
             "port1",
             "port2",
             "ctrl"
          ]
       },
       "midiChannel":{
          "type":"integer",
          "title":"midiChannel",
          "description":"A MIDI channel. 0 represents OMNI (all channels).",
          "minimum":0,
          "maximum":16
       },
       "bankNumber":{
          "type":"integer",
          "title":"bankNumber",
          "description":"An identifier of the preset bank.",
          "minimum":1,
          "maximum":6
       },
       "presetSlot":{
          "type":"integer",
          "title":"presetSlot",
          "description":"An identifier of the preset slot within the bank.",
          "minimum":1,
          "maximum":12
       },
       "mappingType":{
          "type":"string",
          "title":"mappingType",
          "description":"A type of source control change message.",
          "enum":[
             "change",
             "value"
          ]
       }
    },
    "type":"object",
    "title":"Config Schema",
    "description":"Schema for config message",
    "examples":[
       {
          "version":1,
          "router":{
             "routes":[
                {
                   "srcInterface":"midiUsbHost",
                   "srcPort":"port2",
                   "destInterface":"midiIo",
                   "destPort":"port1"
                },
                {
                   "srcInterface":"midiUsbDev",
                   "srcPort":"port1",
                   "destInterface":"midiIo",
                   "destPort":"port1"
                },
                {
                   "srcInterface":"midiUsbHost",
                   "srcPort":"port2",
                   "destInterface":"midiUsbDev",
                   "destPort":"port2"
                }
             ],
             "usbDevToMidiIo":true,
             "usbDevToUsbHost":true,
             "midiIoToUsbDev":true,
             "midiIoToUsbHost":true,
             "usbHostToMidiIo":true,
             "usbHostToUsbDev":true,
             "electraToMidiIo":true,
             "midiIo1Thru":true,
             "midiIo2Thru":true,
             "electraToUsbHost":true,
             "electraToUsbDev":true,
             "usbDevToMidiControl":true
          },
          "presetBanks":[
             {
                "id":1,
                "name":"Default",
                "color":"FFFFFF"
             }
          ],
          "usbHostAssigments":[
             {
                "pattern":"APC",
                "bankNumber":5,
                "presetSlot":1,
                "ports":[
                   {
                      "pattern":"keys",
                      "port":"port1"
                   },
                   {
                      "pattern":"control",
                      "port":"ctrl"
                   }
                ]
             }
          ],
          "midiControl":[
             {
                "event":"switchPage",
                "eventParameter":1,
                "midiMessage":"note",
                "parameterNumber":36
             },
             {
                "event":"switchPage",
                "eventParameter":2,
                "midiMessage":"note",
                "parameterNumber":37
             }
          ],
          "uiFeatures":{
             "controlDoubleClickAction":"resetToDefault",
             "controlLongTouchAction":"openDetail",
             "activeControlSetMode":"local",
             "touchSwitchControlSets":true,
             "activeControlSetType":"bars",
             "usePotTouchSelections":true
          },
          "remote":{
             "enabled":true,
             "interface":"midiUsbHost",
             "port":"port1",
             "channel":1,
             "drop":true,
             "mappings":[
                {
                   "source":16,
                   "destination":7,
                   "type":"value"
                },
                {
                   "source":17,
                   "destination":8,
                   "type":"value"
                },
                {
                   "source":18,
                   "destination":9,
                   "type":"value"
                }
             ]
          },
          "hardware":{
             "useDefaultLayout":true,
             "buttons":[
                {
                   "id":1,
                   "primaryAction":"openSnapshotsMenu"
                }
             ]
          }
       }
    ],
    "required":[
       "version"
    ],
    "properties":{
       "version":{
          "$id":"#/properties/version",
          "type":"integer",
          "title":"version",
          "description":"Provides information about the version of the config file. Electra controller uses version information to distinguish between various config file formats.",
          "default":1,
          "examples":[
             1
          ]
       },
       "router":{
          "$id":"#/properties/router",
          "type":"object",
          "title":"router",
          "description":"Settings of the Electra internal routings.",
          "examples":[
             {
                "usbDevToMidiIo":true,
                "usbDevToUsbHost":true,
                "midiIoToUsbDev":true,
                "midiIoToUsbHost":true,
                "usbHostToMidiIo":true,
                "usbHostToUsbDev":true,
                "electraToMidiIo":true,
                "midiIo1Thru":true,
                "midiIo2Thru":true,
                "electraToUsbHost":true,
                "electraToUsbDev":true,
                "usbDevToMidiControl":true,
                "midiControlInterface":"midiUsbDev",
                "midiControlPort":2,
                "midiControlChannel":0,
                "midiControlDrop":true
             },
             {
                "routes":[
                   {
                      "srcInterface":"midiUsbHost",
                      "srcPort":"port2",
                      "destInterface":"midiIo",
                      "destPort":"port1"
                   },
                   {
                      "srcInterface":"midiUsbDev",
                      "srcPort":"port1",
                      "destInterface":"midiIo",
                      "destPort":"port1"
                   },
                   {
                      "srcInterface":"midiUsbHost",
                      "srcPort":"port2",
                      "destInterface":"midiUsbDev",
                      "destPort":"port2"
                   }
                ]
             }
          ],
          "required":[
             
          ],
          "properties":{
             "usbDevToMidiIo":{
                "$id":"#/properties/router/properties/usbDevToMidiIo",
                "type":"boolean",
                "title":"usbDevToMidiIo",
                "description":"Forwarding USB device MIDI messages to MIDI IO.",
                "default":true
             },
             "usbDevToUsbHost":{
                "$id":"#/properties/router/properties/usbDevToUsbHost",
                "type":"boolean",
                "title":"usbDevToUsbHost",
                "description":"Forwarding USB device MIDI messages to USB host.",
                "default":true
             },
             "midiIoToUsbDev":{
                "$id":"#/properties/router/properties/midiIoToUsbDev",
                "type":"boolean",
                "title":"midiIoToUsbDev",
                "description":"Forwarding MIDI IO MIDI messages to USB device.",
                "default":true
             },
             "midiIoToUsbHost":{
                "$id":"#/properties/router/properties/midiIoToUsbHost",
                "type":"boolean",
                "title":"midiIoToUsbHost",
                "description":"Forwarding MIDI IO MIDI messages to USB host.",
                "default":true
             },
             "usbHostToMidiIo":{
                "$id":"#/properties/router/properties/usbHostToMidiIo",
                "type":"boolean",
                "title":"usbHostToMidiIo",
                "description":"Forwarding USB host MIDI messages to MIDI IO.",
                "default":true
             },
             "usbHostToUsbDev":{
                "$id":"#/properties/router/properties/usbHostToUsbDev",
                "type":"boolean",
                "title":"usbHostToUsbDev",
                "description":"Forwarding USB host MIDI messages to USB device.",
                "default":true
             },
             "midiIo1Thru":{
                "$id":"#/properties/router/properties/midiIo1Thru",
                "type":"boolean",
                "title":"midiIo1Thru",
                "description":"Forwarding from MIDI IO 1 IN to MIDI IO 1 OUT.",
                "default":false
             },
             "midiIo2Thru":{
                "$id":"#/properties/router/properties/midiIo2Thru",
                "type":"boolean",
                "title":"midiIo2Thru",
                "description":"Forwarding from MIDI IO 2 IN to MIDI IO 2 OUT.",
                "default":false
             },
             "electraToMidiIo":{
                "$id":"#/properties/router/properties/electraToMidiIo",
                "type":"boolean",
                "title":"electraToMidiIo",
                "description":"Send output of Controls to MIDI IO.",
                "default":true
             },
             "electraToUsbHost":{
                "$id":"#/properties/router/properties/electraToUsbHost",
                "type":"boolean",
                "title":"electraToUsbHost",
                "description":"Send output of Controls to USB host.",
                "default":true
             },
             "electraToUsbDev":{
                "$id":"#/properties/router/properties/electraToUsbDev",
                "type":"boolean",
                "title":"electraToUsbDev",
                "description":"Send output of Controls to USB device.",
                "default":true
             },
             "usbDevToMidiControl":{
                "$id":"#/properties/router/properties/usbDevToMidiControl",
                "type":"boolean",
                "title":"usbDevToMidiControl",
                "description":"Send USB device to the external MIDI control.",
                "default":true
             },
             "midiControlInterface":{
                "$id":"#/properties/router/properties/midiControlInterface",
                "$ref":"#/definitions/interface"
             },
             "midiControlPort":{
                "$id":"#/properties/router/properties/midiControlPort",
                "$ref":"#/definitions/port"
             },
             "midiControlChannel":{
                "$id":"#/properties/router/properties/midiControlChannel",
                "$ref":"#/definitions/midiChannel"
             },
             "midiControlDrop":{
                "$id":"#/properties/router/properties/midiControlDrop",
                "type":"boolean",
                "title":"midiControlDrop",
                "description":"When set, the MIDI message is consumed by the external control and not forwarded further.",
                "default":false
             },
             "routes":{
                "$id":"#/properties/router/properties/routes",
                "type":"array",
                "title":"routes",
                "description":"A list router rules for MIDI message forwarding.",
                "default":[
                   
                ],
                "examples":[
                   [
                      {
                         "srcInterface":"midiUsbHost",
                         "srcPort":"port2",
                         "destInterface":"midiIo",
                         "destPort":"port1"
                      },
                      {
                         "srcInterface":"midiUsbDev",
                         "srcPort":"port1",
                         "destInterface":"midiIo",
                         "destPort":"port1"
                      },
                      {
                         "srcInterface":"midiUsbHost",
                         "srcPort":"port2",
                         "destInterface":"midiUsbDev",
                         "destPort":"port2"
                      }
                   ]
                ],
                "items":{
                   "$id":"#/properties/router/properties/routes/items",
                   "type":"object",
                   "title":"routingRule",
                   "description":"A routing rule.",
                   "examples":[
                      {
                         "srcInterface":"midiUsbHost",
                         "srcPort":"port2",
                         "destInterface":"midiIo",
                         "destPort":"port1"
                      }
                   ],
                   "required":[
                      "srcInterface",
                      "srcPort",
                      "destInterface",
                      "destPort"
                   ],
                   "properties":{
                      "srcInterface":{
                         "$id":"#/properties/router/properties/routes/items/properties/srcInterface",
                         "$ref":"#/definitions/interface"
                      },
                      "srcPort":{
                         "$id":"#/properties/router/properties/routes/items/properties/srcPort",
                         "$ref":"#/definitions/port"
                      },
                      "destInterface":{
                         "$id":"#/properties/router/properties/routes/items/properties/destInterface",
                         "$ref":"#/definitions/interface"
                      },
                      "destPort":{
                         "$id":"#/properties/router/properties/routes/items/properties/destPort",
                         "$ref":"#/definitions/port"
                      }
                   },
                   "additionalProperties":false
                }
             }
          },
          "additionalProperties":false
       },
       "presetBanks":{
          "$id":"#/properties/presetBanks",
          "type":"array",
          "title":"presetBanks",
          "description":"A list of preset bank configurations.",
          "default":[
             
          ],
          "examples":[
             [
                {
                   "id":1,
                   "name":"Synths",
                   "color":"FFFFFF"
                },
                {
                   "id":2,
                   "name":"Samplers",
                   "color":"F45C51"
                }
             ]
          ],
          "items":{
             "$id":"#/properties/presetBanks/items",
             "type":"object",
             "title":"presetBank",
             "description":"A configuration of a preset page.",
             "examples":[
                {
                   "id":1,
                   "name":"Default",
                   "color":"FFFFFF"
                }
             ],
             "required":[
                "id",
                "name",
                "color"
             ],
             "properties":{
                "id":{
                   "$id":"#/properties/presetBanks/items/properties/id",
                   "type":"integer",
                   "title":"id",
                   "description":"An identifier of the preset bank.",
                   "minimum":1,
                   "maximum":6
                },
                "name":{
                   "$id":"#/properties/presetBanks/items/properties/name",
                   "type":"string",
                   "title":"name",
                   "description":"A name of the preset bank.",
                   "minLength":0,
                   "maxLength":20
                },
                "color":{
                   "$id":"#/properties/presetBanks/items/properties/color",
                   "type":"string",
                   "title":"Color",
                   "description":"A 24-bit RGB code of the preset bank color. The colors are limited to six predefined colors.",
                   "default":"FFFFFF",
                   "enum":[
                      "FFFFFF",
                      "F45C51",
                      "F49500",
                      "529DEC",
                      "03A598",
                      "C44795"
                   ]
                }
             },
             "additionalProperties":false
          }
       },
       "usbHostAssigments":{
          "$id":"#/properties/usbHostAssigments",
          "type":"array",
          "title":"usbHostAssigments",
          "description":"A list of patterns to identify USB devices connected to the USB Host port.",
          "default":[
             
          ],
          "examples":[
             [
                {
                   "pattern":"launchpad",
                   "port":3
                },
                {
                   "pattern":"APC",
                   "bankNumber":5,
                   "presetSlot":1,
                   "ports":[
                      {
                         "pattern":"keys",
                         "port":"port1"
                      },
                      {
                         "pattern":"control",
                         "port":"ctrl"
                      }
                   ]
                }
             ]
          ],
          "items":{
             "$id":"#/properties/usbHostAssigments/items",
             "type":"object",
             "title":"usbHostAssigment",
             "description":"An assigment of an Electra Port to a USB device connected to the USB Host port.",
             "default":{
                
             },
             "examples":[
                {
                   "pattern":"launchpad",
                   "port":3
                }
             ],
             "required":[
                "pattern"
             ],
             "properties":{
                "pattern":{
                   "$id":"#/properties/usbHostAssigments/items/properties/pattern",
                   "type":"string",
                   "title":"pattern",
                   "description":"A string token to be matched against the USB device product name. Case insensitive.",
                   "minLength":3,
                   "maxLength":20
                },
                "port":{
                   "$id":"#/properties/usbHostAssigments/items/properties/port",
                   "$ref":"#/definitions/port"
                },
                "bankNumber":{
                   "$id":"#/properties/usbHostAssigments/items/properties/bankNumber",
                   "$ref":"#/definitions/bankNumber"
                },
                "presetSlot":{
                   "$id":"#/properties/usbHostAssigments/items/properties/presetSlot",
                   "$ref":"#/definitions/presetSlot"
                },
                "ports":{
                   "$id":"#/properties/usbHostAssigments/items/properties/ports",
                   "type":"array",
                   "title":"ports",
                   "description":"A list of patterns to identify USB devices MIDI cables {ports).",
                   "default":[
                      
                   ],
                   "examples":[
                      [
                         {
                            "pattern":"keys",
                            "port":"port1"
                         },
                         {
                            "pattern":"control",
                            "port":"ctrl"
                         }
                      ]
                   ],
                   "items":{
                      "$id":"#/properties/usbHostAssigments/items/ports/items",
                      "type":"object",
                      "title":"ports",
                      "description":"An entry describing a MIDI cable (port) assigment.",
                      "default":{
                         
                      },
                      "required":[
                         "pattern",
                         "port"
                      ],
                      "properties":{
                         "pattern":{
                            "$id":"#/properties/usbHostAssigments/items/ports/items/properties/pattern",
                            "type":"string",
                            "title":"pattern",
                            "description":"A string token to be matched against the MIDI cable (port) name. Case insensitive.",
                            "minLength":3,
                            "maxLength":20
                         },
                         "port":{
                            "$id":"#/properties/usbHostAssigments/items/ports/items/properties/port",
                            "$ref":"#/definitions/port"
                         }
                      }
                   }
                }
             },
             "additionalProperties":false
          }
       },
       "midiControl":{
          "$id":"#/properties/midiControl",
          "type":"array",
          "title":"midiControl",
          "description":"A list of MIDI message to Electra event assigments.",
          "default":[
             
          ],
          "examples":[
             [
                {
                   "event":"switchPage",
                   "eventParameter":1,
                   "midiMessage":"note",
                   "parameterNumber":36
                },
                {
                   "event":"switchPage",
                   "eventParameter":2,
                   "midiMessage":"note",
                   "parameterNumber":37
                }
             ]
          ],
          "items":{
             "$id":"#/properties/midiControl/items",
             "anyOf":[
                {
                   "$id":"#/properties/midiControl/items/anyOf/0",
                   "type":"object",
                   "title":"With an event parameter",
                   "description":"MIDI message to run a Electra event with a parameter.",
                   "examples":[
                      {
                         "event":"switchPage",
                         "eventParameter":1,
                         "midiMessage":"note",
                         "parameterNumber":36
                      }
                   ],
                   "required":[
                      "event",
                      "eventParameter",
                      "midiMessage",
                      "parameterNumber"
                   ],
                   "properties":{
                      "event":{
                         "$id":"#/properties/midiControl/items/anyOf/0/properties/event",
                         "$ref":"#/definitions/event"
                      },
                      "eventParameter":{
                         "$id":"#/properties/midiControl/items/anyOf/0/properties/eventParameter",
                         "$ref":"#/definitions/parameterNumber"
                      },
                      "midiMessage":{
                         "$id":"#/properties/midiControl/items/anyOf/0/properties/midiMessage",
                         "$ref":"#/definitions/midiMessage"
                      },
                      "parameterNumber":{
                         "$id":"#/properties/midiControl/items/anyOf/0/properties/parameterNumber",
                         "$ref":"#/definitions/parameterNumber"
                      }
                   }
                },
                {
                   "$id":"#/properties/midiControl/items/anyOf/1",
                   "type":"object",
                   "title":"Without an event parameter",
                   "description":"MIDI message to run a Electra event without a parameter.",
                   "examples":[
                      {
                         "event":"switchPageNext",
                         "midiMessage":"note",
                         "parameterNumber":39
                      }
                   ],
                   "required":[
                      "event",
                      "midiMessage",
                      "parameterNumber"
                   ],
                   "properties":{
                      "event":{
                         "$id":"#/properties/midiControl/items/anyOf/1/properties/event",
                         "$ref":"#/definitions/event"
                      },
                      "midiMessage":{
                         "$id":"#/properties/midiControl/items/anyOf/1/properties/midiMessage",
                         "$ref":"#/definitions/midiMessage"
                      },
                      "parameterNumber":{
                         "$id":"#/properties/midiControl/items/anyOf/1/properties/parameterNumber",
                         "$ref":"#/definitions/parameterNumber"
                      }
                   }
                }
             ]
          }
       },
       "uiFeatures":{
          "$id":"#/properties/uiFeatures",
          "type":"object",
          "title":"uiFeatures",
          "description":"Set of options that define the UI/UX behaviour.",
          "examples":[
             {
                "uiFeatures":{
                   "controlDoubleClickAction":"resetToDefault",
                   "controlLongTouchAction":"openDetail",
                   "activeControlSetMode":"local",
                   "touchSwitchControlSets":true,
                   "activeControlSetType":"bars",
                   "usePotTouchSelections":true
                }
             }
          ],
          "required":[
             
          ],
          "properties":{
             "touchSwitchControlSets":{
                "$id":"#/properties/uiFeatures/properties/touchSwitchControlSets",
                "type":"boolean",
                "title":"touchSwitchControlSets",
                "description":"When set, touch on LCD changes the active control set.",
                "default":true
             },
             "usePotTouchSelections":{
                "$id":"#/properties/uiFeatures/properties/usePotTouchSelections",
                "type":"boolean",
                "title":"usePotTouchSelections",
                "description":"When set, pot touch can be used to make selections.",
                "default":true
             },
             "activeControlSetType":{
                "$id":"#/properties/uiFeatures/properties/activeControlSetType",
                "$ref":"#/definitions/activeControlSetType"
             },
             "controlDoubleClickAction":{
                "$id":"#/properties/uiFeatures/properties/controlDoubleClickAction",
                "$ref":"#/definitions/controlAction"
             },
             "controlLongTouchAction":{
                "$id":"#/properties/uiFeatures/properties/controlLongTouchAction",
                "$ref":"#/definitions/controlAction"
             },
             "activeControlSetMode":{
                "$id":"#/properties/uiFeatures/properties/activeControlSetMode",
                "$ref":"#/definitions/activeControlSetMode"
             },
             "resetActiveControlSet":{
                "$id":"#/properties/uiFeatures/properties/resetActiveControlSet",
                "type":"boolean",
                "title":"resetActiveControlSet",
                "description":"When set, control set is always reset on a page change.",
                "default":true
             },
             "keepPresetState":{
                "$id":"#/properties/uiFeatures/properties/keepPresetState",
                "type":"boolean",
                "title":"keepPresetState",
                "description":"When set, the controller will persist state of the control values when switching presets.",
                "default":false
             },
             "loadPresetStateOnStartup":{
                "$id":"#/properties/uiFeatures/properties/loadPresetStateOnStartup",
                "type":"boolean",
                "title":"loadPresetStateOnStartup",
                "description":"When set, the controller will load a saved state for when switching to a preset.",
                "default":false
             }
          },
          "additionalProperties":false
       },
       "remote":{
          "$id":"#/properties/remote",
          "type":"object",
          "title":"remote",
          "description":"Definition of remote CC controls for the controller.",
          "examples":[
             {
                "enabled":true,
                "interface":"MidiUsbHost",
                "port":"port1",
                "channel":1,
                "drop":true,
                "mappings":[
                   {
                      "source":16,
                      "destination":7,
                      "type":"value"
                   },
                   {
                      "source":17,
                      "destination":8,
                      "type":"value"
                   }
                ]
             }
          ],
          "required":[
             "enabled"
          ],
          "properties":{
             "enabled":{
                "$id":"#/properties/remote/properties/enabled",
                "type":"boolean",
                "title":"enabled",
                "description":"When set, the remote CC control is enabled.",
                "default":false
             },
             "interface":{
                "$id":"#/properties/remote/properties/interface",
                "$ref":"#/definitions/interface",
                "title":"interface",
                "description":"A MIDI interface to listen to remote CC on."
             },
             "port":{
                "$id":"#/properties/remote/properties/port",
                "$ref":"#/definitions/port",
                "title":"port",
                "description":"A MIDI port to listen to remote CC on."
             },
             "channel":{
                "$id":"#/properties/remote/properties/channel",
                "$ref":"#/definitions/midiChannel",
                "title":"channel",
                "description":"A MIDI channel to listen to remote CC on."
             },
             "drop":{
                "$id":"#/properties/remote/properties/drop",
                "type":"boolean",
                "title":"drop",
                "description":"When set, the MIDI message will not be forwarded.",
                "default":false
             },
             "mappings":{
                "$id":"#/properties/remote/properties/mappings",
                "type":"array",
                "title":"mappings",
                "description":"A list CC to control mapping rules.",
                "default":[
                   
                ],
                "examples":[
                   [
                      {
                         "source":16,
                         "destination":7,
                         "type":"value"
                      },
                      {
                         "source":17,
                         "destination":8,
                         "type":"value"
                      },
                      {
                         "source":18,
                         "destination":9,
                         "type":"value"
                      }
                   ]
                ],
                "items":{
                   "$id":"#/properties/remote/properties/mappings/items",
                   "type":"object",
                   "title":"routingRule",
                   "description":"A routing rule.",
                   "examples":[
                      {
                         "source":16,
                         "destination":7,
                         "type":"value"
                      }
                   ],
                   "required":[
                      "source",
                      "destination",
                      "type"
                   ],
                   "properties":{
                      "source":{
                         "$id":"#/properties/remote/properties/mappings/items/source",
                         "$ref":"#/definitions/parameterNumber"
                      },
                      "destination":{
                         "$id":"#/properties/remote/properties/mappings/items/destination",
                         "$ref":"#/definitions/remoteDestination"
                      },
                      "type":{
                         "$id":"#/properties/remote/properties/mappings/items/type",
                         "$ref":"#/definitions/remoteType"
                      }
                   },
                   "additionalProperties":false
                }
             }
          },
          "additionalProperties":false
       },
       "hardware":{
          "$id":"#/properties/hardware",
          "type":"object",
          "title":"hardware",
          "description":"Hardware specific settings.",
          "examples":[
             {
                "useDefaultLayout":true,
                "usePotTouchShortcuts":false,
                "buttons":[
                   {
                      "id":1,
                      "primary":"openSnapshotsMenu"
                   }
                ]
             }
          ],
          "required":[
             
          ],
          "properties":{
             "useDefaultLayout":{
                "$id":"#/properties/hardware/properties/useDefaultLayout",
                "type":"boolean",
                "title":"useDefaultLayout",
                "description":"When set, the controller will use the default (Mk1) layout.",
                "default":true
             },
             "usePotTouchShortcuts":{
                "$id":"#/properties/hardware/properties/usePotTouchShortcuts",
                "type":"boolean",
                "title":"usePotTouchShortcuts",
                "description":"When set, the controller will allow selections with the pot touch.",
                "default":true
             },
             "buttons":{
                "$id":"#/properties/hardware/properties/buttons",
                "type":"array",
                "title":"buttons",
                "description":"A list of button configurations.",
                "default":[
                   
                ],
                "examples":[
                   [
                      {
                         "id":1,
                         "primary":"openSnapshotsMenu"
                      }
                   ]
                ],
                "items":{
                   "$id":"#/properties/hardware/properties/buttons/items",
                   "type":"object",
                   "title":"button",
                   "description":"A configuration of a button.",
                   "examples":[
                      {
                         "id":1,
                         "primaryAction":"openSnapshotsMenu"
                      }
                   ],
                   "required":[
                      "id",
                      "primary"
                   ],
                   "properties":{
                      "id":{
                         "$id":"#/properties/hardware/properties/buttons/items/properties/id",
                         "type":"integer",
                         "title":"id",
                         "description":"An identifier of the button.",
                         "minimum":1,
                         "maximum":8
                      },
                      "primary":{
                         "$id":"#/properties/hardware/properties/buttons/items/properties/primary",
                         "$ref":"#/definitions/buttonAction"
                      },
                      "alt":{
                         "$id":"#/properties/hardware/properties/buttons/items/properties/alt",
                         "$ref":"#/definitions/buttonAction"
                      },
                      "knobTouch":{
                         "$id":"#/properties/hardware/properties/buttons/items/properties/knobTouch",
                         "$ref":"#/definitions/buttonAction"
                      }
                   },
                   "additionalProperties":false
                }
             }
          },
          "additionalProperties":false
       }
    },
    "additionalProperties":false
 }